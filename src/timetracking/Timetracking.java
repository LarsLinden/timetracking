package timetracking;

import com.phidgets.PhidgetException;
import com.phidgets.RFIDPhidget;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import javax.swing.JOptionPane;
/**
 *
 * @author Lars Linden
 */
public class Timetracking extends javax.swing.JFrame {
    
    static boolean network;
    static boolean clockGo;
    byte bLED;
    public RFIDPhidget rfid_reader;
    RFID_TGL myTGL;
    RFID_TLL myTLL;
    RFID_AL myAL;
    RFID_DL myDL;

    /**
     * Creates new form Timetracking
     */
    public Timetracking() {
       
        initComponents();
                
        GraphicsEnvironment env = GraphicsEnvironment
            .getLocalGraphicsEnvironment();
        GraphicsDevice vc = env.getDefaultScreenDevice();
        vc.setFullScreenWindow(this);
        this.getContentPane().setBackground(Color.black);

        Dimension screensize = new Dimension(vc.getDisplayMode().getWidth(), vc.getDisplayMode().getHeight());
        jLabelClock.setPreferredSize(screensize);
        jLabelClock.setMinimumSize(screensize);
        jLabelClock.setMaximumSize(screensize);

        try{
            clock Clock = new clock(this.jLabelClock);
            
            rfid_reader = new RFIDPhidget();
            
            myAL = new RFID_AL();
            rfid_reader.addAttachListener(myAL);
            
            myDL = new RFID_DL();
            rfid_reader.addDetachListener(myDL);
            
            myTGL = new RFID_TGL(this.jLabelClock, this.rfid_reader);
            rfid_reader.addTagGainListener(myTGL);
            
            myTLL = new RFID_TLL(this.rfid_reader);
            rfid_reader.addTagLossListener(myTLL);
            
            rfid_reader.openAny();
            rfid_reader.waitForAttachment(1000);
            
           } catch (PhidgetException ex) {
               System.out.println("No interface found " + ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelClock = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("timetracking/Bundle"); // NOI18N
        setTitle(bundle.getString("Timetracking.title")); // NOI18N
        setBackground(new java.awt.Color(0, 0, 0));
        setIconImages(null);
        setUndecorated(true);

        jLabelClock.setBackground(new java.awt.Color(240, 240, 240));
        jLabelClock.setFont(new java.awt.Font("Dialog", 1, 8)); // NOI18N
        jLabelClock.setForeground(new java.awt.Color(0, 165, 255));
        jLabelClock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelClock.setText(bundle.getString("Timetracking.jLabelClock.text")); // NOI18N
        jLabelClock.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelClock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelClock.setName(""); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabelClock)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabelClock)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Timetracking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Timetracking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Timetracking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Timetracking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Timetracking().setVisible(true);
            }
        });
    }
    
    public static boolean getClockGo()
    {
        clockGo = RFID_TGL.clockStop;
        return clockGo;
    }
    
    public static boolean ethernet()
    {
        network = DBVerbindung.ethernet;
        return network;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelClock;
    // End of variables declaration//GEN-END:variables
}
